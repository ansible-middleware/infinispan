---
- name: Validate parameters
  ansible.builtin.assert:
    that:
      - infinispan.home is defined
      - infinispan.user is defined
      - infinispan.user.name is defined
      - infinispan.group is defined
      - infinispan.group.name is defined
      - infinispan.version is defined
      - infinispan.config is defined
      - infinispan.config.name is defined
      - infinispan.service.name is defined
    quiet: true

- name: Install parameters
  ansible.builtin.debug:
    var: infinispan_installation_path

- name: Install parameters
  ansible.builtin.debug:
    var: infinispan

- name: Include prerequisite tasks
  ansible.builtin.include_tasks: prereqs.yml
  tags:
    - prereqs

- name: Include firewall config tasks
  ansible.builtin.include_tasks: firewalld.yml
  when: infinispan_configure_firewalld
  tags:
    - firewall

- name: Include install tasks
  ansible.builtin.include_tasks: tasks/install.yml
  tags:
    - install

- name: Install directory
  ansible.builtin.debug:
    msg: "{{ infinispan_service_desc }} installed at path {{ infinispan.home }}"

- name: Include systemd tasks
  ansible.builtin.include_tasks: tasks/systemd.yml
  tags:
    - systemd

- name: Determine JAVA_HOME for selected JVM RPM  # noqa blocked_modules
  ansible.builtin.shell: |
    set -o pipefail
    rpm -ql {{ infinispan_jvm_package }} | grep -Po '/usr/lib/jvm/.*(?=/bin/java$)'
  args:
    executable: /bin/bash
  changed_when: False
  register: rpm_java_home

- name: "Ensure {{ infinispan.service.name }} service configuration is deployed: server.conf"
  ansible.builtin.template:
    src: server.conf.j2
    dest: "{{ infinispan.home }}/bin/server.conf"
    owner: "{{ infinispan.user.name }}"
    group: "{{ infinispan.group.name }}"
    mode: 0644
    backup: yes
  vars:
    jdg_rpm_java_home: "{{ rpm_java_home.stdout }}"
  notify:
    - restart infinispan
  become: yes

- name: "Get xsd schema versions"
  ansible.builtin.find:
    paths: "{{ infinispan.home }}/docs/schema/"
    use_regex: yes
    patterns: ['^.*-server-[0-9.]*[.]xsd$']
  register: server_schema
  become: yes

- name: "Set fetched schema version for template"
  ansible.builtin.set_fact:
    schema_version: "{{ server_schema.files | first | regex_search('[0-9.]*(?=.xsd)') }}"

- name: "Ensure {{ infinispan.service.name }} server configuration is deployed: {{ infinispan.config.name }}"
  ansible.builtin.template:
    src: "{{ infinispan.config.template }}"
    dest: "{{ infinispan.home }}/server/conf/{{ infinispan.config.name }}"
    owner: "{{ infinispan.user.name }}"
    group: "{{ infinispan.group.name }}"
    mode: 0644
    backup: yes
  notify:
    - restart infinispan
  become: yes

- name: "Ensure {{ infinispan.service.name }} log4j2 configuration is deployed"
  ansible.builtin.template:
    src: log4j2.xml.j2
    dest: "{{ infinispan.home }}/server/conf/log4j2.xml"
    owner: "{{ infinispan.user.name }}"
    group: "{{ infinispan.group.name }}"
    mode: 0644
    backup: yes
  notify:
    - restart infinispan
  become: yes

- name: Download database driver jar to target
  ansible.builtin.get_url:
    url: "{{ infinispan_jgroups_jdbc[infinispan_jdbc_engine].driver_jar_url }}"
    dest: "{{ infinispan.home }}/lib/{{ infinispan_jgroups_jdbc[infinispan_jdbc_engine].driver_jar_filename }}"
    owner: "{{ infinispan.user.name }}"
    group: "{{ infinispan.group.name }}"
    mode: 0644
  when:
    - infinispan_jgroups_jdbcping
  become: yes

- name: Include users tasks
  ansible.builtin.include_tasks: jdg_user.yml
  vars:
    users: "{{ infinispan.users }}"
  when:
    - infinispan.users is defined
    - infinispan.users | length > 0

- name: "Ensure {{ infinispan.service.name }} service is running and enabled (first node)"
  ansible.builtin.include_tasks: start.yml
  run_once: yes
  when: infinispan_jgroups_jdbcping or infinispan_keycloak_persistence

- name: "Ensure {{ infinispan.service.name }} service is running and enabled (all nodes)"
  ansible.builtin.include_tasks: start.yml

- name: Link default logs directory
  ansible.builtin.file:
    state: link
    src: "{{ infinispan.home }}/server/log"
    dest: "/var/log/infinispan{{ '-' + infinispan_nodename if infinispan_nodename != inventory_hostname else '' }}"
  become: yes

---
- name: Validate parameters - rest api url
  ansible.builtin.assert:
    that:
      - infinispan_url is defined
    quiet: true
    fail_msg: "REST API url is incorrectly configured."

- name: Validate parameters - cache config
  ansible.builtin.assert:
    that:
      - (infinispan_cache_config is defined and infinispan_cache_config.name is defined) or (infinispan_cache_xml is defined and infinispan_cache_xml | length > 0)
    quiet: true
    fail_msg: "Cache configuration must be passed either as XML string `infinispan_cache_xml` or as yaml dict `infinispan_cache_config`."

- name: Parse cache xml
  middleware_automation.common.xml:
    xmlstring: "{{ infinispan_cache_xml | trim }}"
    xpath: /*
    content: attribute
  register: cache_xml_name
  when: infinispan_cache_xml is defined and infinispan_cache_xml | trim | length > 0

- name: Set cache name from parsed xml
  ansible.builtin.set_fact:
    cache_name: "{{ (item.values() | list)[0]['name'] }}"
  when: infinispan_cache_xml is defined and infinispan_cache_xml | trim | length > 0
  loop: "{{ cache_xml_name.matches }}"

- name: Set cache name from config
  ansible.builtin.set_fact:
    cache_name: "{{ infinispan_cache_config.name }}"
  when: infinispan_cache_config is defined and infinispan_cache_config.name is defined

- name: Assemble yaml template into xmlstring
  ansible.builtin.set_fact:
    infinispan_cache_xml: "{{ lookup('template', 'templates/'+infinispan_cache_config.template+'-cache.j2') | replace('\n', '') }}"
  when: infinispan_cache_config is defined and infinispan_cache_config.name is defined

- name: Check cache state and create if not existing
  block:
  - name: "Check cache {{ cache_name }} state"
    ansible.builtin.uri:
      url: "{{ infinispan_url }}{{ cache_name }}"
      method: "GET"
      user: "{{ infinispan_deployer_user }}"
      password: "{{ infinispan_deployer_password }}"
      force_basic_auth: true
      status_code: 404
    register: cache_status
    retries: 5
    delay: 5
    until: cache_status.status != -1
  - name: "Create cache {{ cache_name }}"
    ansible.builtin.uri:
      url: "{{ infinispan_url }}{{ cache_name }}"
      method: "POST"
      body: "{{ infinispan_cache_xml | trim }}"
      headers:
        Content-Type: application/xml
      user: "{{ infinispan_deployer_user }}"
      password: "{{ infinispan_deployer_password }}"
      force_basic_auth: true
      status_code:
        - 200
        - 201
  rescue:
  - name: Ignore cache already existing
    ansible.builtin.debug:
      msg: "Cache {{ cache_name }} already existing, skipping..."
    when: cache_status.status in [200,204]
  - name: Exit because rest call failed
    ansible.builtin.fail:
      msg: "Error while calling REST API"
    when: cache_status.status not in [200,204]

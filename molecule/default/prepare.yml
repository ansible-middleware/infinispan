---
- name: Prepare
  hosts: all
  vars:
     sudo_pkg_name: 'sudo'
  tasks:

    - name: "Ensure {{ sudo_pkg_name }} is installed (if user is root)."
      ansible.builtin.yum:
        name: "{{ sudo_pkg_name }}"
      when:
        - ansible_user_id == 'root'

    - name: Gather the package facts
      ansible.builtin.package_facts:
        manager: auto

    - name: "Check if {{ sudo_pkg_name }} is installed."
      ansible.builtin.assert:
        that:
          - sudo_pkg_name in ansible_facts.packages

    - name: Install requirements for tests
      become: yes
      ansible.builtin.yum:
        name:
          - iproute
          - python3-lxml
        state: present

    - name: "Retrieve assets server from env"
      ansible.builtin.set_fact:
        assets_server: "{{ lookup('env','MIDDLEWARE_DOWNLOAD_RELEASE_SERVER_URL') }}"

    - name: "Download and deploy jdg zips from {{ assets_server }}" # noqa risky-file-permissions this goes on controller with local user account
      ansible.builtin.get_url:
        url: "{{ asset }}"
        dest: "{{ lookup('env', 'PWD') }}"
        validate_certs: no
      delegate_to: localhost
      loop:
         - "{{ assets_server }}/datagrid/8.4.0/redhat-datagrid-8.4.0-server.zip"
      loop_control:
        loop_var: asset
      when:
        - assets_server is defined
        - assets_server | length > 0
